{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","showHideDetails","divStyle","visible","handleShowHideButton","setState","this","props","className","summary","start","dateTime","location","style","description","email","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","type","onChange","NumberOfEvents","numberEvents","errorText","numberOfEvents","For","placeholder","App","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b0d1b88.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\nstate = {\r\n  event: {},\r\n  showHideDetails: false,\r\n  divStyle: {\r\n    visible: false\r\n  }\r\n};\r\n\r\n//function to open and collapse EVent\r\n\r\nhandleShowHideButton = () => {\r\n  if (this.state.showHideDetails === true) {\r\n    this.setState({ showHideDetails: false });\r\n    this.setState({divStyle: {visible: false}});\r\n  } else {\r\n    this.setState({ showHideDetails: true });\r\n    this.setState({divStyle: {visible: true}});\r\n  }\r\n};\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h2 className='eventSummary'>{event.summary}</h2>\r\n        <h3 className='eventDate'>{event.start.dateTime}</h3>\r\n        <h3 className='eventLocation'>{event.location}</h3>\r\n\r\n        \r\n          <div className='event-hidden-details' style={this.state.divStyle}>\r\n            <h2>About event:</h2>\r\n            <p>{event.description}</p>\r\n            <p>{event.email}</p>\r\n          </div>\r\n        \r\n\r\n        <button\r\n          className='details-button'\r\n          onClick={() => this.handleShowHideButton()}\r\n        >\r\n          {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n        <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n          <Event event={event} />\r\n        </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion\r\n    });\r\n  }\r\n \r\n  render() {\r\n    return (\r\n\r\n  <div className=\"CitySearch\">\r\n    \r\n    <input\r\n    type=\"text\"\r\n    className=\"city\"\r\n    value={this.state.query}\r\n    onChange={this.handleInputChanged}\r\n    />\r\n    \r\n    <ul className=\"suggestions\">\r\n    {this.state.suggestions.map((suggestion) => (\r\n    <li\r\n    key={suggestion}\r\n    onClick={() => this.handleItemClicked(suggestion)}\r\n    >{suggestion}</li>\r\n  ))}\r\n    <li>\r\n      <b>See all cities</b>\r\n    </li>\r\n</ul>\r\n  \r\n  </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberEvents: 8,\r\n    errorText: ''\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    if (value < 1) {\r\n        return this.setState({\r\n        errorText: 'Please choose a number between 1 and 32',\r\n        numberOfEvents: ''\r\n        });\r\n    } else if (value > 32) {\r\n        return this.setState({\r\n          errorText: 'Please choose a number between 1 and 32',\r\n          numberOfEvents: ''\r\n        });\r\n      } else {\r\n        this.setState({\r\n          numberOfEvents: value,\r\n          errorText: '',\r\n        });\r\n      }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div className=\"NumberOfEvents\">\r\n          \r\n          <label For='numberOfEvent'>Number of Events</label>\r\n          <input type=\"number\" className=\"event-number-input\" placeholder='Enter Number of Events'\r\n            value={this.state.numberOfEvents} onChange={this.handleInputChanged} />\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <EventList />\n        <CitySearch />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}